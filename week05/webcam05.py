import sys

import cv2
import numpy as np
from scipy.signal import correlate2d

sys.path.append("../..")
from utilities.webcam_control import Webcam

# Parameter
m = 5
settings = {
    "frame_width": 2048,
    "frame_height": 1536,
    "exposure": -4,
    "gain": 0,
}  # manual camera settings
# settings_file = 'settings.txt'  # file name with settings
# (generated by 'get_settings.py')

downsampling_factor = 1  # downsampling factor (increases speed, but data is lost)

# Open video stream
camera = Webcam(port=0, settings=settings, downscale=downsampling_factor)

H = np.ones((2 * m + 1, 2 * m + 1)) / (2 * m + 1) ** 2

print("Start displaying images from camera")
while 1:

    # Capture frame-by-frame
    ret, frame = camera.get_frame()
    if not ret:
        break
    f = np.mean(frame, -1) / 255
    f = np.rot90(f, k=2)  # rotate image by 180 degrees

    # %% Lowpass filtering and unsharp masking
    g = correlate2d(f, H)
    g = g[m:-m, m:-m]
    sharp = g + 2 * (f - g)

    # %% Update visualization
    # Display the resulting frame
    cv2.imshow("filtered", g)
    cv2.imshow("sharp", sharp)

# When everything done, release the capture
camera.close()
