import sys

import cv2
import numpy as np
from numpy.fft import fft2, ifft2

sys.path.append("../..")
from utilities.webcam_control import Webcam

# Parameter
m = 5
settings = {
    "frame_width": 2048,
    "frame_height": 1536,
    "exposure": -4,
    "gain": 0,
}  # manual camera settings
# settings_file = 'settings.txt'  # file name with settings
# (generated by 'get_settings.py')

downsampling_factor = 1  # downsampling factor (increases speed, but data is lost)

# Open video stream
camera = Webcam(port=0, settings=settings, downscale=downsampling_factor)

u = np.expand_dims(np.arange(settings["frame_height"]), 1)
v = np.expand_dims(np.arange(settings["frame_width"]), 0)
H2 = 0.5 * (np.cos(2 * np.pi * v / v.shape[1]) + np.cos(2 * np.pi * u / u.shape[0]))

print("Start displaying images from camera")
while 1:

    # Capture frame-by-frame
    ret, frame = camera.get_frame()
    if not ret:
        break

    # Preprocessing
    f = np.mean(frame, 2) / 255  # convert to normalized greyscale
    # f = np.rot90(f, k=2) # rotate image by 180 degrees

    # Image filtering
    g = np.real(ifft2(fft2(f) * H2))

    # Update visualization
    cv2.imshow("unfiltered", f)
    cv2.imshow("filtered", g)

# When everything done, release the capture
camera.close()
